
Задание
Задача: реализовать алгоритм перемножения матриц

Язык: C++ или Python

Входные данные: 2 матрицы размером от 100х100 до 2000х2000 каждая.

Выходные данные: проверка корректности перемножения + время вычисления

Реализация должна содержать 2 функции перемножения матриц: на CPU и на GPU с применением CUDA.

Отчет о проделанной лабораторной работе - это git-репозиторий с исходным кодом реализации + описание проделанной работы там же в readme.
Необходимо описать реализацию, объяснив, что конкретно было распараллелено и почему.

Провести эксперименты: перемножить матрицы разных размеров, посчитать ускорение. Результаты привести в виде таблицы/графика.


Описание 
Был разработан и реализован алгоритм перемножения квадратных матриц размером от 100х100 до 2000х2000 на CPU и GPU с использованием CUDA.
Для CPU реализована базовая функция перемножения матриц,
использующая три вложенных цикла. Для GPU написан CUDA-ядро, которое выполняет вычисления с использованием разбиения на блоки и потоки.
Были добавлены функции инициализации матриц случайными значениями, их вывода в консоль, а также проверки корректности результатов.
Для измерения времени выполнения вычислений на CPU использовалась функция clock(), а на GPU — CUDA Events. Результаты перемножения, полученные на CPU и GPU,
сравнивались с использованием функции проверки на соответствие с допустимой погрешностью.

Вывод
Программа успешно реализует перемножение матриц на CPU и GPU, обеспечивая сопоставимые результаты с высокой точностью.
Время выполнения вычислений демонстрирует преимущества параллельной обработки на GPU, особенно при увеличении размеров матриц.
Это подтверждает эффективность использования CUDA для задач линейной алгебры